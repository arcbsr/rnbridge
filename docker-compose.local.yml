services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rnbridge-postgres
    environment:
      POSTGRES_DB: rnbridge_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "15432:5432"  # Changed from 5432 to 15432
    networks:
      - rnbridge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rnbridge-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rnbridge_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./data/logs:/app/logs
      - ./data/uploads:/app/uploads
    ports:
      - "15000:5000"  # Changed from 5000 to 15000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rnbridge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: rnbridge-frontend
    ports:
      - "13000:80"  # Changed from 3000:80 to 13000:80
    depends_on:
      - backend
    networks:
      - rnbridge-network
    environment:
      - REACT_APP_API_URL=http://localhost:15000
    restart: unless-stopped

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: rnbridge-nginx
    ports:
      - "180:80"  # Changed from 80:80 to 180:80
      - "1443:443"  # Changed from 443:443 to 1443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./data/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - rnbridge-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  rnbridge-network:
    driver: bridge 