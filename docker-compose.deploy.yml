services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rnbridge-postgres
    environment:
      POSTGRES_DB: rnbridge_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rnbridge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API (from Docker Hub)
  backend:
    image: bsrsoftbd/rnbridge-backend:latest
    container_name: rnbridge-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rnbridge_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      CORS_ORIGIN: http://localhost:80
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rnbridge-network
    volumes:
      - ./data/logs:/app/logs
      - ./data/uploads:/app/uploads
    restart: unless-stopped

  # Frontend React App (from Docker Hub)
  frontend:
    image: bsrsoftbd/rnbridge-frontend:latest
    container_name: rnbridge-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - rnbridge-network
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  rnbridge-network:
    driver: bridge 